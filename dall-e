#!/bin/bash

set -o pipefail
export LANG=C.UTF-8

export API=${API:-https://api.openai.com/v1/images/generations}
export KEY=${KEY:-$(< ~/.config/secrets/openai)}
export MODEL=${MODEL:-dall-e-3}

if [[ -t 0 ]] && [[ $# -eq 0 ]] || [[ $1 == -* ]]; then
  echo "Usage: ${0##*/} [<] PROMPT" 2>&1
  exit 64
elif [[ $# -eq 0 ]]; then
  export PROMPT=$(< /dev/stdin)
else
  export PROMPT=$*
fi

exec 3<<EOF
{
  "model": env.MODEL,
  "n": (env.COUNT | tonumber? // 1),
  "prompt": env.PROMPT,
  "quality": (env.QUALITY // "standard"),
  "size": (env.SIZE // "1024x1024"),
  "style": (env.STYLE // "natural")
}
EOF

exec 4<<EOF
Authorization: Bearer $KEY
Content-Type: application/json
EOF

exec 5<<EOF
if env.VERBOSE // "" | test("[^0]") then
  .data
    | map((.revised_prompt // env.PROMPT) + "\\n\\n" + .url)
    | join("\\n\\n\\n")
else
  .data[].url
end
EOF

jq -f /dev/fd/3 -n -s -R \
  | curl -d @- -f -m 30 -s -H @/dev/fd/4 "$API" \
  | jq -e -f /dev/fd/5 -r \
  | fmt -s -w 76
set $? ${PIPESTATUS[@]}

if [[ $3 -eq 6 ]] || [[ $3 -eq 7 ]]; then
  echo "Failed to connect to host"
elif [[ $3 -eq 28 ]]; then
  echo "Image generation timed out"
elif [[ $3 -ne 0 ]]; then
  echo "Image generation failed: $3"
elif [[ $4 -ne 0 ]]; then
  echo "Invalid response from model"
fi >&2

exit $(($1 != 0))
